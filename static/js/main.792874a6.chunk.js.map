{"version":3,"sources":["GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","data","dataServer","isReverse","sortType","sizeFild","newVisibleGoods","sort","prev","next","length","localeCompare","reverse","className","style","height","map","good","goodsFromServer","App","state","visibleGoods","visibility","reset","setState","this","type","onClick","min","max","value","onChange","event","target","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wSAeaA,EAA6B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEzCC,EAIED,EAJFC,WACAC,EAGEF,EAHFE,UACAC,EAEEH,EAFFG,SACAC,EACEJ,EADFI,SAGIC,EAAe,YAAOJ,GAkB5B,MAhBiB,SAAbE,GACFE,EAAgBC,MAAK,SAACC,EAAMC,GAC1B,OAAQL,GACN,IAAK,SACH,OAAOI,EAAKE,OAASD,EAAKC,OAC5B,IAAK,UACH,OAAOF,EAAKG,cAAcF,GAC5B,QAAS,OAAQ,MAKnBN,GACFG,EAAgBM,UAIhB,oBAAIC,UAAU,YAAYC,MAAO,CAAEC,OAAO,GAAD,OAAgB,GAAXV,EAAL,OAAzC,SACGC,EAAgBU,KAAI,SAAAC,GAAI,OACvB,oBAAeJ,UAAU,kBAAzB,SACGI,GADMA,SCtCXC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWIC,E,4MACJC,MAAQ,CACNlB,WAAW,GAAD,OAAMgB,GAChBG,aAAa,GAAD,OAAMH,GAClBI,YAAY,EACZnB,WAAW,EACXC,SAAU,OACVC,SAAUa,EAAgBR,Q,EAG5Ba,MAAQ,WACN,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBjB,WAAW,EACXC,SAAU,OACVC,SAAUe,EAAMlB,WAAWQ,Y,4CAI/B,WAAU,IAAD,OACP,EAMIe,KAAKL,MALPlB,EADF,EACEA,WACAoB,EAFF,EAEEA,WACAnB,EAHF,EAGEA,UACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,SAGF,OACE,qBAAKQ,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,oBAAGA,UAAU,gBAAb,yBAEG,IACAR,KAEH,wBAEEiB,GACA,wBACET,UAAU,WACVa,KAAK,SACLC,QAAS,WACP,EAAKH,UAAS,SAAAJ,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBALzB,mBAaDA,GACC,sBAAKT,UAAU,eAAf,UACE,qBAAKA,UAAU,iBAAiBC,MAAO,CAAEC,OAAO,GAAD,OAAK,IAAL,OAA/C,SACE,cAAC,EAAD,CAAWd,KAAM,CACfC,aACAC,YACAC,WACAC,gBAKJ,uBACEQ,UAAU,gBACVa,KAAK,QACLE,IAAK,EACLC,IAAK,GACLC,MAAOzB,EACP0B,SAAU,SAACC,GACT,EAAKR,SAAS,CACZnB,UAAW2B,EAAMC,OAAOH,WAK9B,wBACEjB,UAAWqB,IAAW,WACpB,CAAE,SAAU/B,GACZ,CAAE,WAAYA,IAChBuB,KAAK,SACLC,QAAS,WACP,EAAKH,UAAS,SAAAJ,GAAK,kCACdA,GADc,IAEjBjB,WAAYiB,EAAMjB,gBARxB,uBAeA,wBACEU,UAAU,WACVa,KAAK,SACLC,QAAS,kBAAM,EAAKJ,SAHtB,mBAQA,wBACEV,UAAWqB,IAAW,WACpB,CAAE,UAAwB,YAAb9B,GACb,CAAE,SAAuB,YAAbA,IACdsB,KAAK,SACLC,QAAS,WACP,EAAKH,UAAS,iBAAO,CAAEpB,SAAU,eANrC,qBAYA,wBACES,UAAWqB,IAAW,WACpB,CAAE,UAAwB,WAAb9B,GACb,CAAE,SAAuB,WAAbA,IACdsB,KAAK,SACLC,QAAS,WACP,EAAKH,UAAS,iBAAO,CAAEpB,SAAU,cANrC,iC,GAhHI+B,IAAMC,WAoITjB,IC5JfkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.792874a6.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype fromGoddsList = {\n  dataServer: string[];\n  isReverse: boolean;\n  sortType: string;\n  sizeFild: number;\n};\n\ninterface State {\n  data: fromGoddsList,\n}\n\nexport const GoodsList: React.FC<State> = ({ data }) => {\n  const {\n    dataServer,\n    isReverse,\n    sortType,\n    sizeFild,\n  } = data;\n\n  const newVisibleGoods = [...dataServer];\n\n  if (sortType !== 'none') {\n    newVisibleGoods.sort((prev, next) => {\n      switch (sortType) {\n        case 'length':\n          return prev.length - next.length;\n        case 'alfabet':\n          return prev.localeCompare(next);\n        default: return -1;\n      }\n    });\n  }\n\n  if (isReverse) {\n    newVisibleGoods.reverse();\n  }\n\n  return (\n    <ul className=\"GoodsList\" style={{ height: `${sizeFild * 38}px` }}>\n      {newVisibleGoods.map(good => (\n        <li key={good} className=\"GoodsList__item\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport classNames from 'classnames';\n\nimport { GoodsList } from './GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  dataServer: string[],\n  visibility: boolean;\n  isReverse: boolean;\n  sortType: string;\n  sizeFild: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    dataServer: [...goodsFromServer],\n    visibleGoods: [...goodsFromServer],\n    visibility: false,\n    isReverse: false,\n    sortType: 'none',\n    sizeFild: goodsFromServer.length,\n  };\n\n  reset = () => {\n    this.setState(state => ({\n      isReverse: false,\n      sortType: 'none',\n      sizeFild: state.dataServer.length,\n    }));\n  };\n\n  render() {\n    const {\n      dataServer,\n      visibility,\n      isReverse,\n      sortType,\n      sizeFild,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__wrap\">\n          <h1 className=\"App__title\">Goods</h1>\n          <p className=\"App__subtitle\">\n            Length list:\n            {' '}\n            {sizeFild}\n          </p>\n          <br />\n\n          {!visibility && (\n            <button\n              className=\"App__btn\"\n              type=\"button\"\n              onClick={() => {\n                this.setState(state => ({\n                  visibility: !state.visibility,\n                }));\n              }}\n            >\n              Start\n            </button>\n          )}\n\n          {visibility && (\n            <div className=\"App__control\">\n              <div className=\"App__list-wrap\" style={{ height: `${10 * 38}px` }}>\n                <GoodsList data={{\n                  dataServer,\n                  isReverse,\n                  sortType,\n                  sizeFild,\n                }}\n                />\n              </div>\n\n              <input\n                className=\"App__sizeFild\"\n                type=\"range\"\n                min={1}\n                max={10}\n                value={sizeFild}\n                onChange={(event) => {\n                  this.setState({\n                    sizeFild: +event.target.value,\n                  });\n                }}\n              />\n\n              <button\n                className={classNames('App__btn',\n                  { 'btn-on': isReverse },\n                  { 'btn-off': !isReverse })}\n                type=\"button\"\n                onClick={() => {\n                  this.setState(state => ({\n                    ...state,\n                    isReverse: !state.isReverse,\n                  }));\n                }}\n              >\n                Is revers\n              </button>\n\n              <button\n                className=\"App__btn\"\n                type=\"button\"\n                onClick={() => this.reset()}\n              >\n                Reset\n              </button>\n\n              <button\n                className={classNames('App__btn',\n                  { 'btn-off': sortType !== 'alfabet' },\n                  { 'btn-on': sortType === 'alfabet' })}\n                type=\"button\"\n                onClick={() => {\n                  this.setState(() => ({ sortType: 'alfabet' }));\n                }}\n              >\n                Alfabet\n              </button>\n\n              <button\n                className={classNames('App__btn',\n                  { 'btn-off': sortType !== 'length' },\n                  { 'btn-on': sortType === 'length' })}\n                type=\"button\"\n                onClick={() => {\n                  this.setState(() => ({ sortType: 'length' }));\n                }}\n              >\n                Lenngth\n              </button>\n\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}